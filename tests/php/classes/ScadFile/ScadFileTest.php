<?php
namespace php\classes\ScadFile;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2016-01-13 at 18:21:42.
 */
class ScadFileTest extends \PHPUnit_Framework_TestCase
{
    const CORRECT_TEST_FILE_NAME = "correctScad21TestFile.SPR";
    const EMPTY_TEST_FILE_NAME = "emptyScad21TestFile.SPR";
    const WRONG_TEST_FOOTER_INCREASED_FILE_NAME = "wrongScad21FooterIncreasedTestFile.SPR"; 
    const WRONG_TEST_FOOTER_DECREASED_FILE_NAME = "wrongScad21FooterDecreasedTestFile.SPR"; 
    const WRONG_TEST_FOOTER_TOO_BIG_FILE_NAME = "wrongScad21FooterTooBigTestFile.SPR";
    const WRONG_TYPE_FILE_NAME = "wrongTypeTestFile.txt";
    
    private $wrongFileFormatExceptionClassName;
    protected $object;

    protected function setUp()
    {
        $this->wrongFileFormatExceptionClassName = get_class(new WrongFileFormatException);
        
        $testFileContent = $this->getFileContent(self::CORRECT_TEST_FILE_NAME);
        $this->object = new ScadFile($testFileContent);
    }
    
    private function getFileContent($fileName) {
        return file_get_contents(realpath(__DIR__ . DIRECTORY_SEPARATOR . $fileName));
    }

    public function testIsCorrectScadFileUploaded() {
        $isObjectCreated = !is_null($this->object);
        $this->assertTrue($isObjectCreated);
    }
    
    public function testIsEmptyScadFileUploaded() {
        $testFileContent = $this->getFileContent(self::EMPTY_TEST_FILE_NAME);
        $object = new ScadFile($testFileContent);
        
        $isObjectCreated = !is_null($object);
        $this->assertTrue($isObjectCreated);
    }
    
    public function testIsWrongScadFileFooterAddressIncreasedByOneUploadedWithException() {
        $this->setExpectedException($this->wrongFileFormatExceptionClassName);
        $testFileContent = $this->getFileContent(self::WRONG_TEST_FOOTER_INCREASED_FILE_NAME);
        new ScadFile($testFileContent);
    }
    
    public function testIsWrongScadFileFooterAddressDecreasedByOneUploadedWithException() {
        $this->setExpectedException($this->wrongFileFormatExceptionClassName);
        $testFileContent = $this->getFileContent(self::WRONG_TEST_FOOTER_DECREASED_FILE_NAME);
        new ScadFile($testFileContent);
    }
    
    public function testIsWrongScadFileFooterAddressTooBigUploadedWithException() {
        $this->setExpectedException($this->wrongFileFormatExceptionClassName);
        $testFileContent = $this->getFileContent(self::WRONG_TEST_FOOTER_TOO_BIG_FILE_NAME);
        new ScadFile($testFileContent);
    }
    
    public function testIsWrongTypeFileUploadedWithException() {
        $this->setExpectedException($this->wrongFileFormatExceptionClassName);
        $testFileContent = $this->getFileContent(self::WRONG_TYPE_FILE_NAME);
        new ScadFile($testFileContent);
    }
    
}
